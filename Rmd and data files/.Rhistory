setwd("/Users/jihu/Dropbox/Conferences and talks/Conferences in 2023/ASA traveling course")
library(knitr)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(tidyverse)
library(bayesplot)
CEdata <- readr::read_csv(file = "CEdata.csv")
CEdata[1:3, ]
CEdata <- CEdata %>%
mutate(LogIncome = log(Income)) %>%
mutate(LogExpenditure = log(Expenditure))
# make sure to install and load the library
library(brms)
brms::get_prior(data = CEdata,
family = gaussian,
formula = LogExpenditure ~ 1 + LogIncome)
prior = c(prior(normal(0, 10), class = Intercept),
prior(normal(0, 10), class = b),
prior(cauchy(0, 1), class = sigma))
SLR_Bayes_fit <- brms::brm(data = CEdata,
family = gaussian,
formula = LogExpenditure ~ 1 + LogIncome,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 720)
bayesplot::mcmc_trace(x = SLR_Bayes_fit,
pars = c("b_Intercept", "b_LogIncome", "sigma"))
bayesplot::mcmc_acf(x = SLR_Bayes_fit,
pars = c("b_Intercept", "b_LogIncome", "sigma"))
post_SLR <- brms::posterior_samples(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
summary(SLR_Bayes_fit)
SLR_classical_fit <- lm(formula = LogExpenditure ~ 1 + LogIncome,
data = CEdata)
summary(SLR_classical_fit)
confint.default(SLR_classical_fit)
sum(post_SLR$b_LogIncome >= 0.35)/length(post_SLR$b_LogIncome)
MLR_Bayes_fit_1 <- brm(data = CEdata,
family = gaussian,
formula = LogExpenditure ~ 1 + LogIncome + as.factor(UrbanRural),
prior = c(prior(normal(0, 10), class = Intercept),
prior(normal(0, 10), class = b),
prior(cauchy(0, 1), class = sigma)),
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 129)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = trials((UrbanRural - 1)) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
?brm
Poisson_Bayes_fit <- brms::brm(data = CEdata,
family = poisson(link = "log"),
formula = KidsCount ~ 1 + LogIncome + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 853)
Poisson_classical_fit <- glm(formula =  KidsCount ~ 1 + LogIncome + LogExpenditure,
family = poisson(link = "log"),
data = CEdata)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
CEdata$UrbanRuralNew <- CEdata$UrbanRural - 1
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = UrbanRuralNew ~ 1 + LogExpenditure)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = UrbanRuralNew ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = UrbanRuralNew | trials(nrow(CEdata)) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
CEdata$UrbanRuralNew <- CEdata$UrbanRural - 1
n <- nrow(CEdata)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = UrbanRuralNew ~ 1 + LogExpenditure)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = UrbanRuralNew | trials(n) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
n <- sample(1:10, 100, TRUE) # number of trials
success <- rbinom(100, size = n, prob = 0.4)
x <- rnorm(100)
data2 <- data.frame(n, success, x)
fit2 <- brm(success | trials(n) ~ x, data = data2,
family = binomial("probit"))
fit2 <- brm(success | trials(n) ~ x, data = data2,
family = binomial("logit"))
n <- nrow(CEdata)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
n <- nrow(CEdata)
CEdata$n <- rep(n, n)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
View(CEdata)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) | trials(n) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
bayesplot::mcmc_trace(x = logistic_Bayes_fit,
pars = c("b_Intercept", "b_LogExpenditure"))
bayesplot::mcmc_acf(x = logistic_Bayes_fit,
pars = c("b_Intercept", "b_LogExpenditure"))
post_logistic <- brms::posterior_samples(x = logistic_Bayes_fit)
bayesplot::mcmc_areas(post_logistic, pars = "b_LogExpenditure", prob = 0.95)
quantile(post_logistic$b_LogExpenditure, c(0.025, 0.975))
summary(logistic_Bayes_fit)
logistic_classical_fit <- glm(formula =  (UrbanRural - 1) ~ 1 + LogExpenditure,
family = binomial(link = "logit"),
data = CEdata)
summary(logistic_classical_fit)
confint.default(logistic_classical_fit)
n <- nrow(CEdata)
CEdata %>% add_column(n = n)
CEdata <- readr::read_csv(file = "CEdata.csv")
CEdata[1:3, ]
CEdata <- CEdata %>%
mutate(LogIncome = log(Income)) %>%
mutate(LogExpenditure = log(Expenditure))
n <- nrow(CEdata)
CEdata %>% add_column(n = n)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
View(CEdata)
n <- nrow(CEdata)
CEdata %>% add_column(n = n)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
View(CEdata)
n
n_rec <- nrow(CEdata)
CEdata %>% add_column(n = n_rec)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
View(CEdata)
n_rec
n_rec <- nrow(CEdata)
CEdata <- CEdata %>%
add_column(n = n_rec)
brms::get_prior(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) ~ 1 + LogExpenditure)
View(CEdata)
logistic_Bayes_fit <- brms::brm(data = CEdata,
family = binomial(link = "logit"),
formula = (UrbanRural - 1) | trials(n) ~ 1 + LogExpenditure,
iter = 5000,
warmup = 3000,
thin = 1,
chains = 1,
seed = 257)
bayesplot::mcmc_trace(x = SLR_Bayes_fit,
pars = c("b_Intercept", "b_LogIncome", "sigma"))
bayesplot::mcmc_acf(x = SLR_Bayes_fit,
pars = c("b_Intercept", "b_LogIncome", "sigma"))
post_SLR <- brms::posterior_samples(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
post_SLR <- brms::as_draws(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
post_SLR <- brms::as_draws(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
View(post_SLR)
?as.draws
?as_draws
post_SLR <- brms::as_draws_array(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
View(post_logistic)
post_SLR <- brms::as_draws_array(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
post_SLR <- brms::as_draws_matrix(x = SLR_Bayes_fit)
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
View(post_SLR)
View(post_SLR)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
post_SLR <- as.data.frame(brms::as_draws_matrix(x = SLR_Bayes_fit))
bayesplot::mcmc_areas(post_SLR, pars = "b_LogIncome", prob = 0.95)
View(post_SLR)
quantile(post_SLR$b_LogIncome, c(0.025, 0.975))
summary(SLR_Bayes_fit)
post_logistic <- as.data.frame(brms::as_draws_matrix(x = logistic_Bayes_fit))
bayesplot::mcmc_areas(post_logistic, pars = "b_LogExpenditure", prob = 0.95)
quantile(post_logistic$b_LogExpenditure, c(0.025, 0.975))
summary(logistic_Bayes_fit)
setwd("/Users/jihu/Dropbox/Conferences and talks/Conferences in 2023/ASA traveling course")
setwd("/Users/jihu/Dropbox/Conferences and talks/Conferences in 2023/ASA traveling course/ASATravelingCourse2023/Rmd and data files")
